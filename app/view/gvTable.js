/*
 * File: app/view/gvTable.js
 *
 * This file was generated by Sencha Architect version 2.2.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.gvTable', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.mygridpanel',

    store: 'cultData',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'id',
                    text: 'Id'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'date',
                    text: 'Date'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'time',
                    text: 'Time'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'depNo',
                    text: 'DepNo'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'withDrawal',
                    text: 'WithDrawal'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'deposit',
                    text: 'Deposit'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'machNo',
                    text: 'MachNo'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'memberId',
                    text: 'MemberId'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'transactiionNo',
                    text: 'TransactiionNo'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'name',
                    text: 'Name'
                },
                {
                    xtype: 'actioncolumn',
                    sortable: true,
                    altText: '',
                    items: [
                        {
                            handler: function(view, rowIndex, colIndex, item, e, record, row) {



                                var rec = view.getRecords(view.getNodes())[rowIndex];

                                this.fireEvent('itemclick', this, 'addd', view, rowIndex, colIndex, item, e,record,row);
                            },
                            icon: 'http://b.dryicons.com/images/icon_sets/luna_blue_icons/png/128x128/edit.png',
                            tooltip: 'edit'
                        },
                        {
                            handler: function(view, rowIndex, colIndex, item, e, record, row) {

                                this.fireEvent('itemclick', this, 'dle', view, rowIndex, colIndex, item, e,record,row);
                            },
                            icon: 'http://a.dryicons.com/images/icon_sets/luna_blue_icons/png/128x128/delete.png',
                            tooltip: 'detete'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});